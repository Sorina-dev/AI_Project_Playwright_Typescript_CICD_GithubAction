name: Visual Regression Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Run visual tests daily at 2 AM UTC
    - cron: '0 2 * * *'

concurrency:
  group: visual-tests-${{ github.ref }}
  cancel-in-progress: true

jobs:
  visual-tests-quick:
    name: Quick Visual Tests
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium
    
    - name: Run quick visual tests
      run: |
        npx playwright test visual-testing-simple.spec.ts \
          --project=chromium \
          --reporter=html,line \
          --timeout=30000
    
    - name: Upload visual test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: visual-test-results-quick
        path: |
          test-results/
          playwright-report/
        retention-days: 7

  visual-tests-cross-browser:
    name: Cross-Browser Visual Tests
    timeout-minutes: 45
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}
    
    - name: Run cross-browser visual tests
      run: |
        npx playwright test visual-testing-simple.spec.ts \
          --project=${{ matrix.browser }} \
          --reporter=html,junit \
          --timeout=30000
      continue-on-error: true
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: visual-test-results-${{ matrix.browser }}
        path: |
          test-results/
          playwright-report/
        retention-days: 7

  visual-tests-comprehensive:
    name: Comprehensive Visual Tests
    timeout-minutes: 60
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || (github.event_name == 'push' && contains(github.event.head_commit.message, '[visual-full]'))
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium firefox webkit
    
    - name: Run comprehensive visual tests
      run: |
        npx playwright test visual-testing-comprehensive.spec.ts \
          --reporter=html,junit \
          --timeout=60000
      continue-on-error: true
    
    - name: Upload comprehensive test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: visual-test-results-comprehensive
        path: |
          test-results/
          playwright-report/
        retention-days: 14

  update-baselines:
    name: Update Visual Baselines
    timeout-minutes: 30
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && contains(github.event.head_commit.message, '[update-baselines]')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium
    
    - name: Update visual baselines
      run: |
        npx playwright test visual-testing-simple.spec.ts \
          --project=chromium \
          --update-snapshots \
          --timeout=30000
    
    - name: Commit updated baselines
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add test/ || true
        git add "**/*-snapshots/" || true
        
        if ! git diff --staged --quiet; then
          git commit -m "ðŸŽ¨ Update visual test baselines [skip ci]"
          git push
        else
          echo "No baseline changes to commit"
        fi

  accessibility-tests:
    name: Accessibility Tests
    timeout-minutes: 30
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps chromium
    
    - name: Run accessibility tests
      run: |
        npx playwright test accessibility-tests.spec.ts \
          --project=chromium \
          --reporter=html,line \
          --timeout=30000
    
    - name: Upload accessibility test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: accessibility-test-results
        path: |
          test-results/
          playwright-report/
        retention-days: 7

  deploy-visual-report:
    name: Deploy Visual Test Report
    needs: [visual-tests-quick, visual-tests-cross-browser, accessibility-tests]
    runs-on: ubuntu-latest
    if: always() && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Download all test artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
    
    - name: Merge test reports
      run: |
        mkdir -p ./merged-report
        
        # Copy all HTML reports
        find ./artifacts -name "*.html" -exec cp {} ./merged-report/ \;
        
        # Create index page
        cat > ./merged-report/index.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>Visual Test Results</title>
            <style>
                body { font-family: Arial, sans-serif; margin: 40px; }
                .report-link { display: block; padding: 10px; margin: 5px 0; background: #f5f5f5; text-decoration: none; border-radius: 4px; }
                .report-link:hover { background: #e0e0e0; }
            </style>
        </head>
        <body>
            <h1>Visual & Accessibility Test Results</h1>
            <p>Generated on: $(date)</p>
            <a href="visual-test-results-quick/index.html" class="report-link">ðŸ“¸ Quick Visual Tests</a>
            <a href="accessibility-test-results/index.html" class="report-link">â™¿ Accessibility Tests</a>
            <a href="https://github.com/${{ github.repository }}" class="report-link">ðŸ”— Back to Repository</a>
        </body>
        </html>
        EOF
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./merged-report
        destination_dir: visual-tests